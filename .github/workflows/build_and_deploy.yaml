name: Deploy Snowpark Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write 
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure we fetch history to compare changes

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Upgrade SnowCLI
        run: pip install --upgrade snowflake-cli-labs

      - name: Get changed files
        id: changed-files
        run: |
          git fetch origin main  # Ensure we have access to main history

          # Find the previous commit before the merge
          PREVIOUS_COMMIT=$(git rev-parse HEAD^)
          echo "Previous commit: $PREVIOUS_COMMIT"

          # Get changed files in the last commit range
          CHANGED_FILES=$(git diff --name-only $PREVIOUS_COMMIT HEAD)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected."
            exit 0
          fi

          echo "$CHANGED_FILES" > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt



      - name: Deploy Updated Snowpark Apps
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        run: python deploy_snowpark_apps.py $GITHUB_WORKSPACE changed_files.txt

# build to where you actually select the objects you want to migrate
# i.e. i want to move these 5 procs to mag dev / qa 
# workflows will not be PR based but executed via screens
# you will only be able to send prod branch level objects to prod database
# you can send feature branches to dev / qa database

# steps would be
# 1. build feature-a
# 2. deploy feature-a to dev from the branch directly
# 3. if good PR to dev
# 4. deploy feature-a to qa from the branch directly
# 5. if good PR to qa

# or maybe im an idiot idk
# def ask chatgpt for ideas as there has to be a simplified way